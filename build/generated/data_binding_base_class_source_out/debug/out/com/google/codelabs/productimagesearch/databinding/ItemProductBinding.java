// Generated by view binder compiler. Do not edit!
package com.google.codelabs.productimagesearch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.codelabs.productimagesearch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final TextView tvProductLabel;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvProductScore;

  private ItemProductBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivProduct,
      @NonNull TextView tvProductLabel, @NonNull TextView tvProductName,
      @NonNull TextView tvProductScore) {
    this.rootView = rootView;
    this.ivProduct = ivProduct;
    this.tvProductLabel = tvProductLabel;
    this.tvProductName = tvProductName;
    this.tvProductScore = tvProductScore;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivProduct;
      ImageView ivProduct = rootView.findViewById(id);
      if (ivProduct == null) {
        break missingId;
      }

      id = R.id.tvProductLabel;
      TextView tvProductLabel = rootView.findViewById(id);
      if (tvProductLabel == null) {
        break missingId;
      }

      id = R.id.tvProductName;
      TextView tvProductName = rootView.findViewById(id);
      if (tvProductName == null) {
        break missingId;
      }

      id = R.id.tvProductScore;
      TextView tvProductScore = rootView.findViewById(id);
      if (tvProductScore == null) {
        break missingId;
      }

      return new ItemProductBinding((ConstraintLayout) rootView, ivProduct, tvProductLabel,
          tvProductName, tvProductScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
